pr: none
trigger:
  branches:
    include:
    - master
  paths:
    include:
    - diabetes_regression/
    - ml_service/pipelines/diabetes_regression_build_train_pipeline.py
    - ml_service/pipelines/diabetes_regression_build_train_pipeline_with_r.py
    - ml_service/pipelines/diabetes_regression_build_train_pipeline_with_r_on_dbricks.py

variables:
- template: diabetes_regression-variables.yml
- group: devopsforai-aml-vg

pool:
  vmImage: ubuntu-latest

stages:
- stage: 'Model_CI'
  displayName: 'Model CI'
  jobs:
  - job: "Model_CI_Pipeline"
    displayName: "Model CI Pipeline"
    container: mcr.microsoft.com/mlops/python:latest
    timeoutInMinutes: 0
    steps:
    - template: azdo-base-pipeline.yml
    - task: AzureCLI@1
      inputs:
        azureSubscription: '$(WORKSPACE_SVC_CONNECTION)'
        scriptLocation: inlineScript
        workingDirectory: $(Build.SourcesDirectory)
        inlineScript: |
          set -e # fail on error
          export SUBSCRIPTION_ID=$(az account show --query id -o tsv)
          # Invoke the Python building and publishing a training pipeline
          python -m ml_service.pipelines.diabetes_regression_build_train_pipeline
      displayName: 'Publish Azure Machine Learning Pipeline'

- stage: 'Deploy_AKS'
  displayName: 'Deploy to AKS'
  condition: and(succeeded(), variables['AKS_DEPLOYMENT_NAME'])
  jobs:
  - job: "Deploy_AKS"
    displayName: "Deploy to AKS"
    container: mcr.microsoft.com/mlops/python:latest
    timeoutInMinutes: 0
    steps:
    - template: diabetes_regression-template-get-model-version.yml
    - task: ms-air-aiagility.vss-services-azureml.azureml-model-deploy-task.AMLModelDeploy@0
      displayName: 'Azure ML Model Deploy'
      inputs:
        azureSubscription: $(WORKSPACE_SVC_CONNECTION)
        modelSourceType: manualSpec
        modelName: '$(MODEL_NAME)'
        modelVersion: $(MODEL_VERSION)
        inferencePath: '$(Build.SourcesDirectory)/$(SOURCES_DIR_TRAIN)/scoring/inference_config.yml'
        deploymentTarget: AKS
        aksCluster: $(AKS_COMPUTE_NAME)
        deploymentName: $(AKS_DEPLOYMENT_NAME)
        deployConfig: '$(Build.SourcesDirectory)/$(SOURCES_DIR_TRAIN)/scoring/deployment_config_aks.yml'
        overwriteExistingDeployment: true
    - task: AzureCLI@1
      displayName: 'Smoke test'
      inputs:
        azureSubscription: '$(WORKSPACE_SVC_CONNECTION)'
        scriptLocation: inlineScript
        inlineScript: |
          set -e # fail on error
          export SUBSCRIPTION_ID=$(az account show --query id -o tsv)
          python -m ml_service.util.smoke_test_scoring_service --type AKS --service "$(AKS_DEPLOYMENT_NAME)"

- stage: 'Deploy_Webapp'
  displayName: 'Deploy to Webapp'
  dependsOn: Trigger_AML_Pipeline
  condition: and(succeeded(), variables['WEBAPP_DEPLOYMENT_NAME'])
  jobs:
  - job: "Deploy_Webapp"
    displayName: "Deploy to Webapp"
    container: mcr.microsoft.com/mlops/python:latest
    timeoutInMinutes: 0
    steps:
    - template: diabetes_regression-template-get-model-version.yml
    - task: AzureCLI@1
      displayName: 'Create scoring image and set IMAGE_LOCATION variable'
      inputs:
        azureSubscription: '$(WORKSPACE_SVC_CONNECTION)'
        scriptLocation: inlineScript
        inlineScript: |
          set -e # fail on error
          export SUBSCRIPTION_ID=$(az account show --query id -o tsv)
          python -m ml_service.util.create_scoring_image --output_image_location_file image_location.txt
          # Output image location to Azure DevOps job
          IMAGE_LOCATION="$(cat image_location.txt)"
          echo "##vso[task.setvariable variable=IMAGE_LOCATION]$IMAGE_LOCATION"
    - task: AzureWebAppContainer@1
      name: WebAppDeploy
      displayName: 'Azure Web App on Container Deploy'
      inputs:
        azureSubscription: 'AzureResourceConnection'
        appName: '$(WEBAPP_DEPLOYMENT_NAME)'
        containers: '$(IMAGE_LOCATION)'
    - task: AzureCLI@1
      displayName: 'Smoke test'
      inputs:
        azureSubscription: '$(WORKSPACE_SVC_CONNECTION)'
        scriptLocation: inlineScript
        inlineScript: |
          set -e # fail on error
          export SUBSCRIPTION_ID=$(az account show --query id -o tsv)
          python -m ml_service.util.smoke_test_scoring_service --type Webapp --service "$(WebAppDeploy.AppServiceApplicationUrl)/score"
